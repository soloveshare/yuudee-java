package com.dkd.api;import com.dkd.XiaoyudiApplication;import com.dkd.common.constant.ResultStant;import org.junit.Before;import org.junit.Test;import org.junit.runner.RunWith;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;import org.springframework.boot.test.context.SpringBootTest;import org.springframework.http.MediaType;import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;import org.springframework.test.web.servlet.MockMvc;import org.springframework.test.web.servlet.MvcResult;import org.springframework.test.web.servlet.ResultActions;import org.springframework.test.web.servlet.setup.MockMvcBuilders;import org.springframework.transaction.annotation.Transactional;import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;@RunWith(SpringJUnit4ClassRunner.class)@SpringBootTest(classes = XiaoyudiApplication.class,properties = "/application.properties")@AutoConfigureMockMvc@Transactionalpublic class MxgTestTest {    private MockMvc mockMvc;    @Autowired    private MxgTest mxgTest;    @Autowired    private XiaoyudiApplication xiaoyudiApplication;    @Before    public void setUp() throws Exception {        this.mockMvc = MockMvcBuilders.standaloneSetup(mxgTest).build();    }    @Test    public void testCode() throws Exception {        ResultActions resultActions = this.mockMvc.perform(get("/mxg/test")                .accept(MediaType.ALL))                .andExpect(status().isOk());        /*ResultActions resultActions = this.mockMvc.                perform(MockMvcRequestBuilders.request(HttpMethod.POST,"/app/code"));*/        MvcResult mvcResult = resultActions.andReturn();        System.out.println("=====客户端获得反馈状态:" + mvcResult.getResponse().getStatus());        String result = mvcResult.getResponse().getContentAsString();        System.out.println("=====客户端获得反馈数据:" + result);    }    @Test    public void test() throws Exception {        int resultCodeSuccess = ResultStant.RESULT_CODE_SUCCESS;         resultCodeSuccess = ResultStant.RESULT_CODE_LOGIN;         resultCodeSuccess = ResultStant.RESULT_CODE_SERVICE;         resultCodeSuccess = ResultStant.RESULT_CODE_UNUSUAL;         resultCodeSuccess = ResultStant.RESULT_CODE_NULL;         resultCodeSuccess = ResultStant.RESULT_CODE_LOSE;         resultCodeSuccess = ResultStant.RESULT_CODE_ERROR;    }}