package com.dkd.api;import com.xfkj.XiaoyudiApplication;import com.xfkj.api.AppStatisticsController;import org.junit.Before;import org.junit.Test;import org.junit.runner.RunWith;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;import org.springframework.boot.test.context.SpringBootTest;import org.springframework.http.HttpMethod;import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;import org.springframework.test.web.servlet.MockMvc;import org.springframework.test.web.servlet.MvcResult;import org.springframework.test.web.servlet.ResultActions;import org.springframework.test.web.servlet.request.MockMvcRequestBuilders;import org.springframework.test.web.servlet.setup.MockMvcBuilders;@RunWith(SpringJUnit4ClassRunner.class)@SpringBootTest(classes = XiaoyudiApplication.class,properties = "/application.properties")@AutoConfigureMockMvcpublic class AppStatisticsControllerTest {    private final Logger logger = LoggerFactory.getLogger(AppStatisticsControllerTest.class);    private MockMvc mockMvc;    @Autowired    private AppStatisticsController appStatisticsController;    @Before    public void setUp() throws Exception {        this.mockMvc = MockMvcBuilders.standaloneSetup(appStatisticsController).build();    }    @Test    public void getNounDayInfo() throws Exception{        ResultActions resultActions = this.mockMvc.                perform(MockMvcRequestBuilders.request(HttpMethod.POST,"/app/statistics/noun/dayInfo")                        .param("token","token")                        .param("scene","scene")                        .param("module","module")                );        MvcResult mvcResult = resultActions.andReturn();        logger.info("=====getNounDayInfo mvcResult:" + mvcResult.getResponse().getStatus());        String result = mvcResult.getResponse().getContentAsString();        logger.info("=====getNounDayInfo result:" + result);    }    @Test    public void getNounWeekInfo() throws Exception{        ResultActions resultActions = this.mockMvc.                perform(MockMvcRequestBuilders.request(HttpMethod.POST,"/app/statistics/noun/weekInfo")                        .param("token","token")                        .param("scene","scene")                        .param("module","module")                );        MvcResult mvcResult = resultActions.andReturn();        logger.info("=====getNounWeekInfo mvcResult:" + mvcResult.getResponse().getStatus());        String result = mvcResult.getResponse().getContentAsString();        logger.info("=====getNounWeekInfo result:" + result);    }    @Test    public void getNounMonthInfo() throws Exception{    }    @Test    public void getNounMonthInfo1() throws Exception{    }}